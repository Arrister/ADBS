#Plotting a set of complex numbers
import matplotlib.pyplot as plt
x = 3 + 2j
a = [-2+4j,-1+2j,0+2j,1+2j,2+2j,-1+4j,0+4j,1+4j]
A = [x.real for x in a]
B = [x.imag for x in a]
plt.scatter(A,B,color='blue')
plt.show()


#Matrix Addition
import numpy as np

A = np.array([[2,3],[3,4]])
B = np.array([[5,6],[2,0]])

print("Printing elements of first: ")
print(A)
print("Printing elements of second: ")
print(B)

print("Addition of two matrix: ")
print(np.add(A,B))


#Matrix Multiplication
X = [[3,2,1],[4,5,6],[6,8,9]]
Y = [[5,4,1,4],[3,6,2,3],[1,7,1,2]]
MUL = [[0,0,0,0],[0,0,0,0],[0,0,0,0]]

print("Multiplcation of two mmatrix is: ")
for i in range(len(X)):
    for j in range(len(Y[0])):
        for k in range(len(Y)):
            MUL[i][j] += X[i][k] * Y[k][j]
for r in MUL:
    print(r)


#Rank of Matrix
import numpy as np
a = np.array([[0,5,4],[4,2,6],[3,3,3]])
rank = np.linalg.matrix_rank(a)
print("Rank of Matrix is: ",rank)


#Projection of b orthogonal to a set of given vectors
import numpy as np
def oprojection(of_vec,on_vec):
    x1 = np.array(of_vec)
    x2 = np.array(on_vec)
    scal = np.dot(x2,x1)/np.dot(x2,x2)
    vec = scal * x2
    return round(scal, 10), np.around(vec, decimals=10)
print(oprojection([3.0,4.0],[2.0,0.1]))
print(oprojection([3.0,4.0],[8.0,3.1]))


#Enter a given matrix and eigen value of the same, find eigen vector (order 2)
import numpy as np
A = np.asmatrix("-5 1;10 -3")
print("A\n",A)
print("Eigen Values of A are: ", np.linalg.eigvals(A))
eigenvalues, eigenvectors = np.linalg.eig(A)
print("First set of Eigen Values: ",eigenvalues)
print("Eigen Vectors are: ",eigenvectors)


#Addition of two complex numbers
c1 = 32+7j
c2 = 34+7j
c3 = c1 + c2
print("Addition of two complex numbers is: ", c3)